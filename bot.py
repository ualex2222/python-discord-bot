import datetime
import time
from random import randint
import discord
from discord.ext import commands
import sqlite3
from settings import settings

client = commands.Bot(command_prefix = settings['PREFIX'],intents=discord.Intents.all())
client.remove_command("help")

connection = sqlite3.connect("server.db")
cursor = connection.cursor()

bad_words = []

@client.event
async def on_ready():
    cursor.execute("""CREATE TABLE IF NOT EXISTS users(
        name TEXT,
        id INT,
        cash BIGINT,
        rep INT,
        lvl INT,
        server_id INT
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS shop(
        role_id INT,
        id INT,
        cost BIGINT
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS badwords(
        bad_word TEXT
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS daily(
        user_id INT,
        dat BIGINT
    )""")

    connection.commit()
    for guild in client.guilds:
        for member in guild.members:
            if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
                cursor.execute(f"INSERT INTO users VALUES ('{member}', {member.id},{0},0,1,{guild.id})")
            else:
                pass
    connection.commit()

    for i in cursor.execute("SELECT * FROM badwords"):
        bad_words.append(i[0])
    print("Bot connected")
    await client.change_presence(status = discord.Status.online, activity=discord.Game('–º–æ–Ω–æ–ø–æ–ª–∏—é'))

@client.event
async def on_member_join(member):
    if cursor.execute("SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
        cursor.execute("INSERT INTO users VALUES ('{member}', {member.id},{0},0,1,{member.guild.id})")
        connection.commit()
        log("new user: "+member.name)
    else:
        pass

@client.command(aliases=['balance','cash'])
async def __balance(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send(
            embed = discord.Embed(
                description=f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{ctx.author}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]} :dollar:**"""
            ))
        await log(ctx.author.name+" —É–∑–Ω–∞–ª —Å–≤–æ–π –±–∞–ª–∞–Ω—Å")
    else:
        await ctx.send(
            embed = discord.Embed(
                description=f"""–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è **{member}** —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç **{cursor.execute("SELECT cash FROM users WHERE id = {}".format(member.id)).fetchone()[0]} :dollar:**"""
            ))
        await log(ctx.author.name+" —É–∑–Ω–∞–ª –±–∞–ª–∞–Ω—Å "+member.name)

@client.command(aliases = ['award'])
@commands.has_role("üöî Police")
async def __award(ctx,member:discord.Member = None, amount: int = None):
    if member is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É –∂–µ–ª–∞–µ—Ç–µ –≤—ã–¥–∞—Ç—å —Å—É–º–º—É")
    else:
        if amount is None:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤—ã–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        elif amount < 1:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 0 :dollar:")
        else:
            cursor.execute("UPDATE users SET cash = cash + {} WHERE id = {}".format(amount, member.id))
            connection.commit()

            await ctx.message.add_reaction("‚úÖ")
            await log(ctx.author.name+" –Ω–∞—á–∏—Å–ª–∏–ª "+str(amount)+" –¥–æ–ª–ª–∞—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "+member.name)

@client.command(aliases = ['take'])
@commands.has_role("üöî Police")
async def __take(ctx,member:discord.Member = None, amount: int = None):
    if member is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ä–∂–µ–ª–∞–µ—Ç–µ –∑–∞–±—Ä–∞—Ç—å —Å—É–º–º—É")
    else:
        if amount is None:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–±—Ä–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        elif amount < 1:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 0 :dollar:")
        else:
            cursor.execute("UPDATE users SET cash = cash - {} WHERE id = {}".format(amount, member.id))
            connection.commit()

            await ctx.message.add_reaction("‚úÖ")
            await log(ctx.author.name+" –∑–∞–±—Ä–∞–ª "+str(amount)+" –¥–æ–ª–ª–∞—Ä–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "+member.name)

@client.command(aliases=['add-shop'])
@commands.has_role("zxcmaster")
async def __ad_shop(ctx, role: discord.Role = None, cost: int = None):
    if role is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ –≤–Ω–µ—Å—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω")
    else:
        if cost is None:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏")
        elif cost<1:
            await ctx.send(f"**{ctx.author}**, —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –º–µ–Ω—å—à–µ 1")
        else:
            cursor.execute("INSERT INTO shop VALUES ({},{},{})".format(role.id,ctx.guild.id,cost))
            connection.commit()

            await ctx.message.add_reaction('‚úÖ')
            await log(ctx.author.name+" –¥–æ–±–∞–≤–∏–ª –≤ –º–∞–≥–∞–∑–∏–Ω —Ä–æ–ª—å "+role.name)

@client.command(aliases=['delete-shop'])
@commands.has_role("zxcmaster")
async def __del_shop(ctx, role: discord.Role = None, cost: int = None):
    if role is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞")
    else:
            cursor.execute("DELETE FROM shop WHERE role_id = {}".format(role.id))
            connection.commit()

            await ctx.message.add_reaction('‚úÖ')
            await log(ctx.author.name+" —É–±—Ä–∞–ª –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞ —Ä–æ–ª—å "+role.name)

@client.command(aliases=['shop'])
async def __shop(ctx):
    embed = discord.Embed(title = '–ú–∞–≥–∞–∑–∏–Ω —Ä–æ–ª–µ–π')

    for row in cursor.execute("SELECT role_id, cost FROM shop WHERE id = {}".format(ctx.guild.id)):
        if ctx.guild.get_role(row[0]) != None:
            embed.add_field(
                name = f'–°—Ç–æ–∏–º–æ—Å—Ç—å {row[1]} :dollar:',
                value = f"–í—ã –ø—Ä–∏–æ–±—Ä–µ—Ç–µ—Ç–µ —Ä–æ–ª—å {ctx.guild.get_role(row[0]).mention}",
                inline = False
            )
            await log(ctx.author.name+" –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–ª —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤")
        else:
            pass
    
    await ctx.send(embed = embed)

@client.command(aliases = ['buy','buy-role'])
async def __buy(ctx,role:discord.Role = None):
        if role is None:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏")
        else:
            if role in ctx.author.roles:
                await ctx.send(f"**{ctx.author}**, –≤—ã —É–∂–µ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –¥–∞–Ω–Ω—É—é —Ä–æ–ª—å")
            elif cursor.execute("SELECT cost FROM shop WHERE role_id = {}".format(role.id)).fetchone()[0] > cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]:
                await ctx.send(f"**{ctx.author}**, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤")
            else:
                await ctx.author.add_roles(role)
                cursor.execute("UPDATE users SET cash = cash - {0} WHERE id = {1}".format(cursor.execute("SELECT cost FROM shop WHERE role_id = {}".format(role.id)).fetchone()[0],ctx.autor.id))
                connection.commit()
                await ctx.message.add_reaction('‚úÖ')
                await log(ctx.author.name+" –∫—É–ø–∏–ª —Ä–æ–ª—å "+role.name)


@client.command(aliases=['rep','+rep'])
async def __rep(ctx,member: discord.Member = None):
    if member is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
    else:
        if member.id == ctx.author.id:
            await ctx.send(f"**{ctx.author}**, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–∞–º–æ–≥–æ —Å–µ–±—è")
        else:
            cursor.execute("UPDATE users SET rep = rep + {} WHERE id = {}".format(1, member.id))
            connection.commit()

            await ctx.message.add_reaction('‚úÖ')
            await log(ctx.author.name+" –¥–æ–±–∞–≤–∏–ª —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é "+member.name)

@client.command(aliases=['leader','top'])
async def __leaderboard(ctx):
    embed = discord.Embed(title = '–¢–æ–ø 10 —Å–µ—Ä–≤–µ—Ä–∞')
    counter = 0

    for row in cursor.execute("SELECT name, cash FROM users WHERE server_id = {} ORDER BY cash DESC LIMIT 10".format(ctx.guild.id)):
        counter+=1
        embed.add_field(
            name = f'#{counter} | `{row[0]}`',
            value = f'–ë–∞–ª–∞–Ω—Å: {row[1]}',
            inline = False
        )

    await ctx.send(embed = embed)
    await log(ctx.author.name+" –≤—ã–≤–µ–ª —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤")

@client.command(aliases=['clear'])
@commands.has_role("üöî Police")
async def __clear(ctx, amount: int = None):
    if amount == None:
        await ctx.message.channel.purge(limit=101)
        await log(ctx.author.name+" –æ—á–∏—Å—Ç–∏–ª —á–∞—Ç –Ω–∞ 100")
    else:
        await ctx.message.channel.purge(limit=amount+1)
        await log(ctx.author.name+" –æ—á–∏—Å—Ç–∏–ª —á–∞—Ç –Ω–∞ "+str(amount))

@client.command(aliases=['kick'])
@commands.has_role("üöî Police")
async def __kick(ctx, member: discord.Member = None,*, reason = None): 
    await ctx.channel.purge(limit=1)
    if member == None:
        pass
    else:
        await member.kick(reason = reason)
        await ctx.send(f"{member.mention} –±—ã–ª –∫–∏–∫–Ω—É—Ç —á–µ–ª–æ–≤–µ–∫–æ–º {ctx.author.mention}")
        await member.send(f"–í—ã –±—ã–ª–∏ –≤—ã–≥–Ω–∞–Ω—ã —Å —Å–µ—Ä–≤–µ—Ä–∞ {ctx.guild.name}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {ctx.author.mention}")
        await log(member.name+" –±—ã–ª –≤—ã–≥–Ω–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º "+ctx.author.name)

@client.command(aliases=['ban'])
@commands.has_role("üöî Police")
async def __ban(ctx, member: discord.Member = None,*, reason = None): 
    await ctx.channel.purge(limit=1)
    if member == None:
        pass
    else:
        await member.kick(reason = reason)
        await ctx.send(f"{member.mention} –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω —á–µ–ª–æ–≤–µ–∫–æ–º {ctx.author.mention}")
        await member.send(f"–í—ã –±—ã–ª–∏ –∑–∞–±–∞–Ω–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {ctx.guild.name}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {ctx.author.mention}")
        await log(member.name+" –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º "+ctx.author.name)

@client.command(aliases=['mute'])
@commands.has_role("üöî Police")
async def __mute(ctx,member: discord.Member = None,minutes: int = 60):
    await ctx.channel.purge(limit = 1)
    if member == None:
        await ctx.send(f"**{ctx.author.mention}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–º—É—Ç–∏—Ç—å")
    else:
        mute_role = discord.utils.get(ctx.message.guild.roles, name="MUTED")
        await member.add_roles(mute_role)
        seconds = minutes*60
        await ctx.send(f"**{member.mention}**, –ø–æ–ª—É—á–∏–ª –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Ç–∞ –∑–∞ –Ω–∞—Ä—É—à–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –Ω–∞ {minutes} –º–∏–Ω—É—Ç. –ó–∞–º—É—Ç–∏–ª - **{ctx.author.mention}**")
        await member.send(f"–í—ã –±—ã–ª–∏ –ª–∏—à–µ–Ω—ã —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏ –ø–∏—Å–∞—Ç—å –∏ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ {ctx.guild.name}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {ctx.author.mention}")
        await log(member.name+" –±—ã–ª –∑–∞–º—É—á–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º "+ctx.author.name+" –Ω–∞ "+minutes+" –º–∏–Ω—É—Ç")
        time.sleep(seconds)
        await member.remove_roles(mute_role)

@client.command(aliases = ['help'])
async def __help(ctx):
    embed =  discord.Embed(title = "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")

    embed.add_field(
        name = "{}clear".format(settings['PREFIX']),
        value = "–û—á–∏—â–∞–µ—Ç —á–∞—Ç. –í–Ω–∏–º–∞–Ω–∏–µ! –ï—Å–ª–∏ –Ω–µ –Ω–∞–ø–∏—Å–∞—Ç—å —á–∏—Å–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è - –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã 100 —Å–æ–æ–±—â–µ–Ω–∏–π (–¢–æ–ª—å–∫–æ @Police)",
        inline=False
        )
    embed.add_field(
        name = "{}balance/{}cash".format(settings['PREFIX'],settings['PREFIX']),
        value = "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è",
        inline=False
        )
    embed.add_field(
        name = "{}award".format(settings['PREFIX']),
        value = "–î–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –º–æ–Ω–µ—Ç—ã (–¢–æ–ª—å–∫–æ @zxcmaster)",
        inline=False
        )
    embed.add_field(
        name = "{}take".format(settings['PREFIX']),
        value = "–ó–∞–±–∏—Ä–∞–µ—Ç —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–æ–Ω–µ—Ç—ã, —à—Ç—Ä–∞—Ñ (–¢–æ–ª—å–∫–æ @zxcmaster)",
        inline=False
        )
    embed.add_field(
        name = "{}rep/{}+rep".format(settings['PREFIX'],settings['PREFIX']),
        value = "–î–æ–±–∞–≤–ª—è–µ—Ç –æ–¥–Ω—É —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é()–≤—Å–µ–º –∫—Ä–æ–º–µ —Å–µ–±—è",
        inline=False
        )
    embed.add_field(
        name = "{}leader/{}top".format(settings['PREFIX'],settings['PREFIX']),
        value = "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–æ–ø —Å–∞–º—ã—Ö –±–æ–≥–∞—Ç—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–µ—Ä–≤–µ—Ä–∞",
        inline=False
        )
    embed.add_field(
        name = "{}kick".format(settings['PREFIX']),
        value = "–ö–∏–∫–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–¢–æ–ª—å–∫–æ @Police)",
        inline=False
        )
    embed.add_field(
        name = "{}ban".format(settings['PREFIX']),
        value = "–ë–∞–Ω–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è(–¢–æ–ª—å–∫–æ @Police)",
        inline=False
        )
    embed.add_field(
        name = "{}shop".format(settings['PREFIX']),
        value = "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –º–∞–≥–∞–∑–∏–Ω–µ",
        inline=False
        )
    embed.add_field(
        name = "{}add-shop".format(settings['PREFIX']),
        value = "–î–æ–±–∞–≤–ª—è–µ—Ç —Ä–æ–ª—å –≤ –º–∞–≥–∞–∑–∏–Ω(–¢–æ–ª—å–∫–æ @zxcmaster)",
        inline=False
        )
    embed.add_field(
        name = "{}delete-shop".format(settings['PREFIX']),
        value = "–£–¥–∞–ª—è–µ—Ç —Ä–æ–ª—å –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞(–¢–æ–ª—å–∫–æ @zxcmaster)",
        inline=False
        )
    embed.add_field(
        name = "{}buy/{}buy-role".format(settings['PREFIX'],settings['PREFIX']),
        value = "–ü–æ–∫—É–ø–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ä–æ–ª—å",
        inline=False
        )
    embed.add_field(
        name = "{}mute".format(settings['PREFIX']),
        value = "–ó–∞–ø—Ä–µ—â–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø–∏—Å–∞—Ç—å –∏ –≥–æ–≤–æ—Ä–∏—Ç—å –Ω–∞ –≤—Ä–µ–º—è –≤ –º–∏–Ω—É—Ç–∞—Ö(–¢–æ–ª—å–∫–æ @Police)",
        inline=False
        )
    embed.add_field(
        name = "{}help".format(settings['PREFIX']),
        value = "–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ",
        inline=False
        )

    await ctx.send(embed=embed)
    await log(ctx.author.name + " –≤—ã–≤–µ–ª —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")

@client.command(aliases = ['give','give-money'])
async def __givemoney(ctx,member:discord.Member = None, amount: int = None):
    if member == None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∫–æ—Ç–æ—Ä–æ–º—É —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –¥–µ–Ω—å–≥–∏")
    else:
        if amount == None:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
        elif amount < 1:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 0 :dollar:")
        else:
            if cursor.execute("SELECT cash FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0] >= amount:
                cursor.execute("UPDATE users SET cash = cash + {} WHERE id = {}".format(amount, member.id))
                cursor.execute("UPDATE users SET cash = cash - {} WHERE id = {}".format(amount, ctx.author.id))
                connection.commit()
                await ctx.message.add_reaction("‚úÖ")
                await log(ctx.author.name+" –ø–µ—Ä–µ–≤–µ–ª "+str(amount)+" –¥–æ–ª–ª–∞—Ä–æ–≤ –Ω–∞ —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è "+member.name)
            else:
                await ctx.send(f"**{ctx.author}**, —É –≤–∞—Å –Ω–µ—Ç—É —Ç–∞–∫–æ–π —Å—É–º–º—ã –Ω–∞ –±–∞–ª–∞–Ω—Å–µ")


@client.command(aliases = ['daily','everyday'])
async def __daily(ctx):
    datee = datetime.datetime.now()
    datee = int(datee.strftime("%Y%m%d"))
    if cursor.execute("SELECT user_id FROM daily WHERE dat = {}".format(datee)).fetchone() != None:
        await ctx.send(f"**{ctx.author}**, –≤—ã —É–∂–µ –ø–æ–ª—É—á–∏–ª–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è")
    else:
        cursor.execute("INSERT INTO daily VALUES ({},{})".format(ctx.author.id, datee))
        rnd = randint(10,18)
        cursor.execute("UPDATE users SET cash = cash + {} WHERE id = {}".format(rnd,ctx.author.id))
        connection.commit()
        await ctx.send(f"**{ctx.author}**, –≤—ã –ø–æ–ª—É—á–∏–ª–∏ {str(rnd)} :dollar:")
        await log(ctx.author.name + " –ø–æ–ª—É—á–∏–ª –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É")

@client.command(aliases = ['add-badword'])
@commands.has_role("zxcmaster")
async def __addword(ctx,wordd: str = ""):
    if wordd == None:
        pass
    else:
        for i in cursor.execute("SELECT * FROM badwords").fetchall():
            if wordd == i[0]:
                await ctx.message.add_reaction("‚ùå")
                return
        cursor.execute(f"INSERT INTO badwords VALUES ('{wordd}')")
        connection.commit()
        await ctx.message.add_reaction("‚úÖ")
        await log(ctx.author.name+" –¥–æ–±–∞–≤–∏–ª –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: "+wordd)
        bad_words.append(wordd)

@client.command(aliases = ['badwords'])
async def __badwords(ctx):
    embed =  discord.Embed(title = "–°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤")
    for i in bad_words:
        embed.add_field(
            name = i,
            value = "#"*len(i)
            )
    await ctx.send(embed = embed)

@client.command(aliases = ['delete-badword'])
@commands.has_role("zxcmaster")
async def __deleteword(ctx,wordd: str = ""):
    if wordd == None:
        pass
    else:
        for i in cursor.execute("SELECT * FROM badwords").fetchall():
            if wordd == i[0]:
                cursor.execute(f"DELETE FROM badwords WHERE bad_word = '{wordd}'")
                connection.commit()
                await ctx.message.add_reaction("‚úÖ")
                await log(ctx.author.name+" —É–¥–∞–ª–∏–ª –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ: "+wordd)
                bad_words = []
                for i in cursor.execute("SELECT * FROM badwords"):
                    bad_words.append(i[0])
                return
        await ctx.message.add_reaction("‚ùå")
        


@client.command(aliases=['logs'])
#@commands.has_role("zxcmaster")
async def __logs(ctx):
    await log(ctx.author.name+" —Å–∫–∞—á–∞–ª –ª–æ–≥–∏")
    await ctx.channel.purge(limit = 1)
    await ctx.author.send(file = discord.File("logs.txt"))

@client.command(aliases=['db'])
@commands.has_role("zxcmaster")
async def __db(ctx):
    await log(ctx.author.name+" —Å–∫–∞—á–∞–ª –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
    await ctx.channel.purge(limit = 1)
    await ctx.author.send(file = discord.File("server.db"))

async def log(text: str = "Error"):
    now = datetime.datetime.now()
    now = now.strftime("%Y-%m-%d %H:%M:%S")
    string = "[log]["+now+"]: "+str(text)
    print(string)
    logs = open("logs.txt","a")
    logs.write(string+"\n")
    logs.close()


@client.event
async def on_message(message):
    await client.process_commands(message)
    msg = message.content.lower()
    if not msg.startswith("add-badword") or not msg.startswith("delete-badword"):
        for word in bad_words:
            if word in msg:
                await message.delete()
                await log("deleted message for bad words from user "+str(message.author.name)+" //—Å–æ–æ–±—â–µ–Ω–∏–µ: "+message.content)



client.run(settings["TOKEN"])

